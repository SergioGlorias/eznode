#!/bin/bash
set -eo pipefail
shopt -s expand_aliases
source /ez/util.sh

[ -n "$SSL_DOMAIN" ] || abort_service
wait_for_service nginx || exit 0

info letsencrypt Setting up LetsEncrypt SSL certificate for https://$SSL_DOMAIN/ in /data/nginx-ssl

# Alias `certbot` to run as www-data
alias certbot='s6-setuidgid www-data certbot'

# Shared options for run & renew
LETSENCRYPT_OPT="$LETSENCRYPT_OPT --http-01-port 8080 --config-dir /data/nginx-ssl/letsencrypt
  $([ -n "$LETSENCRYPT_LOGS" ] || echo "--quiet")"

# Obatain certificate
certbot run $LETSENCRYPT_OPT --nginx -d "$SSL_DOMAIN" --hsts --non-interactive --agree-tos \
  $([ -n "$LETSENCRYPT_EMAIL" ] && echo "--email $LETSENCRYPT_EMAIL" \
                                || echo "--register-unsafely-without-email") \
  2>&1

# LetsEncrypt doesn't support tcp proxies out of the box. We need to grab the directives
# out of the HTTP server{} block and inject them into the stream{server{}} block.
ssl_directives=$(grep /data/nginx-ssl/letsencrypt /etc/nginx/nginx.conf | sed 's/#.*//' | tr '\n' ' ')
sed -i "s~# LETSENCRYPT-GOES-HERE~$ssl_directives~" /etc/nginx/nginx.conf
nginx -s reload

info letsencrypt LetsEncrypt certificate set up successfully
signal_readiness

# Restart letsencrypt whenever nginx gets restarted, so that its config will get updated
(do_once letsencrypt-restart-with && restart_with letsencrypt nginx &) 1>&2

# Try renewing every now and then
while :; do sleep 2d; certbot renew $LETSENCRYPT_OPT; done 2>&1
